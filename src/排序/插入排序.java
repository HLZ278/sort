package 排序;

/**
 * @author 96916
 *插入排序即：把数组划分为两个部分，一部分为有序，一部分无序，每次从无序部分
 *取出一个元素插入到有序部分中，有限次操作后完成整体排序
 *
 *
 *由于「插入排序」在「几乎有序」的数组上表现良好，特别地，在「短数组」上的表现也很好。
 *因为「短数组」的特点是：每个元素离它最终排定的位置都不会太远。
 *为此，在小区间内执行排序任务的时候，可以转向使用「插入排序」。
 *
 *时间复杂度：平均O(N^2)，最好O(n)，最坏O(n^2)，空间复杂度O(1) 
 *这里 N 是数组的长度；
 *空间复杂度：O(1)，使用到常数个临时变量。
 *
 *插入排序最差的情况：最后一个元素是最小的，这时候就有改进了：希尔排序
 */
public class 插入排序 {//双指针同时移动
	public static void sortArray(int[] nums) {
		for (int i = 1; i < nums.length; i++) {
			//先暂存元素，然后前面的有序部分才可往后移一个
			int temp = nums[i];
			int j = i;
			while (j>0&&nums[j-1]>temp) {
				nums[j] = nums[j-1];
				j--;
			}
			nums[j] = temp;
		}
	}
	public static void main(String[] args) {
		int[] a= //{5,2,3,6,1,4,1,10,-8,3,8,7,9,2,1};
		{-74,48,-20,2,10,-84,-5,-9,11,-24,-91,2,-71,64,63,80,28,-30,-58,-11,-44,-87,-22,54,-74,-10,-55,-28,-46,29,10,50,-72,34,26,25,8,51,13,30,35,-8,50,65,-6,16,-2,21,-78,35,-13,14,23,-3,26,-90,86,25,-56,91,-13,92,-25,37,57,-20,-69,98,95,45,47,29,86,-28,73,-44,-46,65,-84,-96,-24,-12,72,-68,93,57,92,52,-45,-2,85,-63,56,55,12,-85,77,-39};
		sortArray(a);
		for (int i = 0; i < a.length; i++) {
			System.out.println(a[i]);
		}
	}
}
